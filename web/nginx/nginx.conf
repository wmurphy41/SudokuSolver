# Nginx configuration for SudokuSolver web application
# This configuration handles routing between frontend and backend services

events {
    # Basic event configuration
    worker_connections 1024;
}

http {
    # Include MIME types for proper file serving
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging configuration
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic performance settings
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    server {
        # Listen on port 80 (standard HTTP port)
        listen 80;
        server_name localhost;

        # Root directory for static files (React build output)
        root /usr/share/nginx/html;
        index index.html;

        # Serve React application for all routes (Single Page Application)
        # This ensures React Router works properly with browser refresh
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets for better performance
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }

        # Proxy API requests to backend service
        # All requests to /api/* will be forwarded to the FastAPI backend
        location /api/ {
            # Remove /api prefix when forwarding to backend
            rewrite ^/api/(.*) /$1 break;
            
            # Proxy to backend service (defined in docker-compose.yml)
            proxy_pass http://backend:8000/;
            
            # Standard proxy headers for proper request handling
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings for API requests
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Handle CORS if needed (uncomment if frontend and backend are on different domains)
            # add_header Access-Control-Allow-Origin *;
            # add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            # add_header Access-Control-Allow-Headers "Content-Type, Authorization";
        }

        # Health check endpoint for load balancer monitoring
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
